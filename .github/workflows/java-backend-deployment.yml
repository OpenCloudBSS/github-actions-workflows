name: OCB Java Backend Deployment

on:
  workflow_call:
    inputs:
      jdk_version:
        required: true
        type: string
      properties_file:
        required: true
        type: string

env:
  jdk_version: ${{inputs.jdk_version}}
  version: ${{github.ref_name}}_${{github.run_id}}
  GITHUB_TOKEN_WRITE: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN_GLOBAL }}


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{env.jdk_version}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.jdk_version}}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Read environment
        run: cat $prop_file >> $GITHUB_ENV
        env:
          prop_file: ${{ inputs.properties_file }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets[env.secret_name_aws_access_key_id] }}
          aws-secret-access-key: ${{ secrets[env.secret_name_aws_secret_access_key] }}
          aws-region: ${{ env.aws_region }}

      - name: Publish to ECR using properties build
        run: ${{env.gradle_build}} -PprojectVersion=${{env.version}} -PdockerImage=${{env.docker_image}}

      - name: Deploy to EKS ${{env.aws_region}}/${{env.eks_cluster_name}} from ${{env.kustomize_dir}}
        run: |
          aws eks update-kubeconfig --name $eks_cluster_name
          cd $kustomize_dir
          kustomize edit add annotation ocb/version:$version
          kustomize edit set image app-image=$docker_image:$version
          kustomize build | kubectl apply -f -       

      - name: Send notification to Slack
        uses: OpenCloudBSS/slack-notify-action@main
        if: always()
        with:
          slack_channel_id: ${{ secrets.SLACK_PR_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
